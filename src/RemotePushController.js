import React, {useEffect} from 'react';
import PushNotification from 'react-native-push-notification';
import  {requestApi}  from '../src/api/';
import { useSelector } from "react-redux";
import  LocalNotification  from './NotifService';
const RemotePushController = (props) => {
  const dataUsuarioTelefono = useSelector((state) => state.dataUsuarioTelefono);
const actualizarToken=async(token)=>{
  try {

    let response=await requestApi(
    "usuarios/actualizarTokenUsuario?tokenUsuario="+token+"&numeroUsuario="+dataUsuarioTelefono.numero,
    {
    },
    "get"
    );
    
  } catch (error) {
  }
}  
  useEffect(() => {
    PushNotification.configure({
      // (optional) Called when Token is generated (iOS and Android)
      onRegister: function (token) {
        actualizarToken( token.token);
      },

      // (required) Called when a remote or local notification is opened or received
      onNotification: function (notification) {
        let nombreUsuario=props.listadoContactosTotal[notification.title]==undefined ? (notification.title) : (props.listadoContactosTotal[notification.title].nombre ? props.listadoContactosTotal[notification.title].nombre :notification.title )  ; 
        //let nombreUsuario="asas";
        LocalNotification.localNotification({
          /* Android Only Properties */
          channelId: notification.channelId ,
          //ticker: 'My Notification Ticker', // (optional)
          autoCancel: true, // (optional) default: true
          //largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
          largeIconUrl: "https://www.adslzone.net/app/uploads-adslzone.net/2019/04/borrar-fondo-imagen.jpg",
          imageUrl: "https://www.adslzone.net/app/uploads-adslzone.net/2019/04/borrar-fondo-imagen.jpg",
          //smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
          //bigText: notification.message, // (optional) default: "message" prop
          //subText: 'This is a subText', // (optional) default: none
          color: 'red', // (optional) default: system default
          vibrate: true, // (optional) default: true
          vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
          tag: 'some_tag', // (optional) add tag to message
          group: 'group', // (optional) add group to message
          groupSummary: false, // (optional) set this notification to be the group summary for a group of notifications, default: false
          ongoing: false, // (optional) set whether this is an "ongoing" notification
          actions: ['Yes', 'No'], // (Android only) See the doc for notification actions to know more
          invokeApp: true, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true
    
          when: null, // (optionnal) Add a timestamp pertaining to the notification (usually the time the event occurred). For apps targeting Build.VERSION_CODES.N and above, this time is not shown anymore by default and must be opted into by using `showWhen`, default: null.
          usesChronometer: false, // (optional) Show the `when` field as a stopwatch. Instead of presenting `when` as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call), default: false.
          timeoutAfter: null, // (optional) Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled, default: null
    
          /* iOS only properties */
          category: '', // (optional) default: empty string
          //subtitle: "My Notification Subtitle", // (optional) smaller title below notification title
    
          /* iOS and Android properties */
          id: 1, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
          title: nombreUsuario, // (optional)
          message: notification.message, // (required)
          //userInfo: { screen: 'home' }, // (optional) default: {} (using null throws a JSON value '<null>' error)
          playSound: true, // (optional) default: true
          soundName:  'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
          number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
        });;

        // process the notification here
      },
      // Android only: GCM or FCM Sender ID
      senderID: 'appmensajeria-4362f',
      popInitialNotification: true,
      requestPermissions: true,
    });
  }, []);

  return null;
};

export default RemotePushController;